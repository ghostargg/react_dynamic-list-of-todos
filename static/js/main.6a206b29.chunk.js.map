{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodoId","className","map","todo","id","title","completed","isSelected","cn","type","onClick","TodoFilter","selectValue","setSelectValue","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","user","selectedTodo","closeModal","isCompleted","href","email","name","App","useState","setTodos","setSelectedTodoId","setSelectedTodo","isTodoSelected","setIsTodoSelected","setUser","useEffect","handleCloseModal","useCallback","visibleTodos","useMemo","filteredTodos","filter","lowerQuery","trim","toLowerCase","includes","length","todoId","foundTodo","find","userId","getUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a206b29.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[],\n  selectTodo: (userId: number) => void;\n  selectedTodoId: number | null;\n}\n\nexport const TodoList: React.FC<TodoListProps> = (\n  { todos, selectTodo, selectedTodoId },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id, title, completed,\n          } = todo;\n\n          const isSelected = selectedTodoId === id;\n\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={id}>\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn(\n                  {\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  },\n                )}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectTodo(id)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye-slash': isSelected,\n                      'fa-eye': !isSelected,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","interface TodoFilterProps {\n  selectValue: string\n  setSelectValue: (value: string) => void;\n  query: string;\n  setQuery: (value: string) => void;\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = (\n  {\n    selectValue, setSelectValue, query, setQuery,\n  },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={(event) => setSelectValue(event?.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface TodoModalProps {\n  user: User | null;\n  selectedTodo: Todo | null;\n  closeModal: () => void;\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = (\n  { user, selectedTodo, closeModal },\n) => {\n  const isCompleted = selectedTodo?.completed\n    ? 'Done'\n    : 'Planned';\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn(\n                {\n                  'has-text-danger': !selectedTodo?.completed,\n                  'has-text-success': selectedTodo?.completed,\n                },\n              )}\n              >\n                {isCompleted}\n\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | []>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isTodoSelected, setIsTodoSelected] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const [query, setQuery] = useState('');\n  const [selectValue, setSelectValue] = useState('all');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const handleSelectTodo = (todoId: number) => {\n    setSelectedTodoId(todoId);\n    setIsTodoSelected(true);\n    const foundTodo = todos.find(todo => todo.id === todoId) || null;\n\n    setSelectedTodo(foundTodo);\n\n    const userId = todos.find(todo => todo.id === todoId)?.userId || 0;\n\n    getUser(userId).then(setUser);\n  };\n\n  const handleCloseModal = useCallback(() => {\n    setIsTodoSelected(false);\n    setSelectedTodoId(null);\n    setUser(null);\n    setSelectedTodo(null);\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    let filteredTodos = todos;\n\n    if (selectValue === 'completed') {\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n    } else if (selectValue === 'active') {\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n    } else if (selectValue === 'all') {\n      filteredTodos = todos;\n    }\n\n    if (query) {\n      filteredTodos = filteredTodos.filter(todo => {\n        const lowerQuery = query.trim().toLowerCase();\n\n        return todo.title.toLowerCase().includes(lowerQuery);\n      });\n    }\n\n    return filteredTodos;\n  }, [selectValue, todos, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            {user?.name}\n            <div className=\"block\">\n              <TodoFilter\n                selectValue={selectValue}\n                setSelectValue={setSelectValue}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectTodo={handleSelectTodo}\n                    selectedTodoId={selectedTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isTodoSelected\n      && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          user={user}\n          closeModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}